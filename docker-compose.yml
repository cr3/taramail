name: taramail
services:
  api:
    build: backend
    depends_on:
      dockerapi:
        condition: service_started
      memcached:
        condition: service_started
      mysql:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - mysql-socket-vol-1:/run/mysqld/
    environment:
      - DBDRIVER=mysql
      - DBNAME=${DBNAME}
      - DBUSER=${DBUSER}
      - DBPASS=${DBPASS}
      - REDIS_SLAVEOF_IP=${REDIS_SLAVEOF_IP:-}
      - REDIS_SLAVEOF_PORT=${REDIS_SLAVEOF_PORT:-}
      - REDISPASS=${REDISPASS}
    networks:
      - network
    command: >
      bash -c "alembic upgrade head && uvicorn --host=0.0.0.0 --port=80 taramail.api:app --log-config=/app/log-config.yaml"
    restart: always
    healthcheck:
      test: [ "CMD", "bash", "-c", ":> /dev/tcp/127.0.0.1/80" ]
      start_period: 10s
      interval: 10s
      timeout: 5s
      retries: 3
    dns:
      - ${IPV4_NETWORK:-172.22.1}.254

  certbot:
    image: certbot/certbot:v5.1.0
    depends_on:
      dockerapi:
        condition: service_started
      unbound:
        condition: service_healthy
    volumes:
      - ./certbot/deploy-hook.sh:/deploy-hook.sh:ro
      - certbot-certs:/etc/letsencrypt
      - certbot-www:/var/www/html
    environment:
      - MAIL_HOSTNAME=${MAIL_HOSTNAME}
    networks:
      - network
    command: >
      sh -c "trap exit TERM; while :; do
        certbot renew --webroot --webroot-path=/var/www/html --deploy-hook /deploy-hook.sh;
        sleep 12h;
      done"
    entrypoint: ""
    restart: always
    healthcheck:
      test: [ "CMD", "test", "-e", "/etc/letsencrypt/live/fullchain.pem" ]
      start_period: 10s
      interval: 10s
      timeout: 5s
      retries: 15

  clamd:
    image: clamav/clamav:1.4.1
    depends_on:
      unbound:
        condition: service_healthy
    volumes:
      - ./clamd/clamd.conf:/etc/clamav/clamd.conf:ro,Z
      - ./clamd/freshclam.conf:/etc/clamav/freshclam.conf:ro,Z
      - clamd-vol-1:/var/lib/clamav
    networks:
      - network
    restart: always
    dns:
      - ${IPV4_NETWORK:-172.22.1}.254

  dockerapi:
    build: backend
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - COMPOSE_PROJECT_NAME=${COMPOSE_PROJECT_NAME:-taramail}
    networks:
      - network
    command: uvicorn --host=0.0.0.0 --port=80 taramail.dockerapi:app --log-config=/app/log-config.yaml
    restart: always
    dns:
      - ${IPV4_NETWORK:-172.22.1}.254
    security_opt:
      - label=disable

  dovecot:
    build: dovecot
    depends_on:
      certbot:
        condition: service_healthy
      mysql:
        condition: service_healthy
      netfilter:
        condition: service_started
      redis:
        condition: service_started
    volumes:
      - ./dovecot/conf:/etc/dovecot:z
      - ./dovecot/templates:/templates:z
      - certbot-certs:/etc/letsencrypt:ro,z
      - ./sogo/conf/:/etc/sogo/:z
      - vmail-vol-1:/var/vmail
      - vmail-index-vol-1:/var/vmail_index
      - crypt-vol-1:/mail_crypt/
      - ./rspamd/custom/:/etc/rspamd/custom:z
      - rspamd-vol-1:/var/lib/rspamd
      - mysql-socket-vol-1:/run/mysqld/
    environment:
      - DOVECOT_MASTER_USER=${DOVECOT_MASTER_USER:-}
      - DOVECOT_MASTER_PASS=${DOVECOT_MASTER_PASS:-}
      - MAIL_REPLICA_IP=${MAIL_REPLICA_IP:-}
      - DOVEADM_REPLICA_PORT=${DOVEADM_REPLICA_PORT:-}
      - LOG_LINES=${LOG_LINES:-9999}
      - DBNAME=${DBNAME}
      - DBUSER=${DBUSER}
      - DBPASS=${DBPASS}
      - MAIL_HOSTNAME=${MAIL_HOSTNAME}
      - IPV4_NETWORK=${IPV4_NETWORK:-172.22.1}
      - ALLOW_ADMIN_EMAIL_LOGIN=${ALLOW_ADMIN_EMAIL_LOGIN:-n}
      - MAILDIR_GC_TIME=${MAILDIR_GC_TIME:-7200}
      - ACL_ANYONE=${ACL_ANYONE:-disallow}
      - SKIP_FTS=${SKIP_FTS:-n}
      - MAILDIR_SUB=${MAILDIR_SUB:-}
      - MASTER=${MASTER:-y}
      - REDIS_SLAVEOF_IP=${REDIS_SLAVEOF_IP:-}
      - REDIS_SLAVEOF_PORT=${REDIS_SLAVEOF_PORT:-}
      - REDISPASS=${REDISPASS}
      - COMPOSE_PROJECT_NAME=${COMPOSE_PROJECT_NAME:-taramail}
      - FLATCURVE_EXPERIMENTAL=${FLATCURVE_EXPERIMENTAL:-n}
    ports:
      - '${DOVEADM_PORT:-127.0.0.1:19991}:12345'
      - '${IMAP_PORT:-143}:143'
      - '${IMAPS_PORT:-993}:993'
      - '${POP_PORT:-110}:110'
      - '${POPS_PORT:-995}:995'
      - '${SIEVE_PORT:-4190}:4190'
    networks:
      network:
        ipv4_address: ${IPV4_NETWORK:-172.22.1}.250
    restart: always
    labels:
      ofelia.enabled: "true"
      ofelia.job-exec.dovecot_imapsync_runner.schedule: "@every 1m"
      ofelia.job-exec.dovecot_imapsync_runner.no-overlap: "true"
      ofelia.job-exec.dovecot_imapsync_runner.command: "/bin/bash -c \"[[ $${MASTER} == y ]] && /usr/local/bin/gosu nobody /usr/local/bin/imapsync_runner.pl || exit 0\""
      ofelia.job-exec.dovecot_trim_logs.schedule: "@every 1m"
      ofelia.job-exec.dovecot_trim_logs.command: "/bin/bash -c \"[[ $${MASTER} == y ]] && /usr/local/bin/gosu vmail /usr/local/bin/trim_logs.sh || exit 0\""
      ofelia.job-exec.dovecot_quarantine.schedule: "@every 20m"
      ofelia.job-exec.dovecot_quarantine.command: "/bin/bash -c \"[[ $${MASTER} == y ]] && /usr/local/bin/gosu vmail /usr/local/bin/quarantine_notify.py || exit 0\""
      ofelia.job-exec.dovecot_clean_q_aged.schedule: "@every 24h"
      ofelia.job-exec.dovecot_clean_q_aged.command: "/bin/bash -c \"[[ $${MASTER} == y ]] && /usr/local/bin/gosu vmail /usr/local/bin/clean_q_aged.sh || exit 0\""
      ofelia.job-exec.dovecot_maildir_gc.schedule: "@every 30m"
      ofelia.job-exec.dovecot_maildir_gc.command: "/bin/bash -c \"source /source_env.sh ; /usr/local/bin/gosu vmail /usr/local/bin/maildir_gc.sh\""
      ofelia.job-exec.dovecot_sarules.schedule: "@every 24h"
      ofelia.job-exec.dovecot_sarules.command: "/bin/bash -c \"/usr/local/bin/sa-rules.sh\""
      ofelia.job-exec.dovecot_fts.schedule: "@every 24h"
      ofelia.job-exec.dovecot_fts.command: "/bin/bash -c \"/usr/local/bin/gosu vmail /usr/local/bin/optimize-fts.sh\""
      ofelia.job-exec.dovecot_repl_health.schedule: "@every 5m"
      ofelia.job-exec.dovecot_repl_health.command: "/bin/bash -c \"/usr/local/bin/gosu vmail /usr/local/bin/repl_health.sh\""
    cap_add:
      - NET_BIND_SERVICE
    dns:
      - ${IPV4_NETWORK:-172.22.1}.254
    tty: true
    ulimits:
      nproc: 65535
      nofile:
        soft: 20000
        hard: 40000

  memcached:
    image: memcached:alpine
    networks:
      network:
        aliases:
          - memcached
    restart: always

  monit:
    build: monit
    depends_on:
      certbot:
        condition: service_started
      dockerapi:
        condition: service_started
      mysql:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - rspamd-vol-1:/var/lib/rspamd
      - mysql-socket-vol-1:/run/mysqld/
    environment:
      - DBNAME=${DBNAME}
      - DBUSER=${DBUSER}
      - DBPASS=${DBPASS}
      - REDISPASS=${REDISPASS}
    ports:
      - '${MONIT_PORT:-127.0.0.1:2812}:2812'
    networks:
      - network
    restart: always
    dns:
      - ${IPV4_NETWORK:-172.22.1}.254

  mysql:
    image: mariadb:10.11
    depends_on:
      unbound:
        condition: service_healthy
    volumes:
      - ./mysql/conf.d/:/etc/mysql/conf.d/:ro,Z
      - mysql-vol-1:/var/lib/mysql/
      - mysql-socket-vol-1:/run/mysqld/
    environment:
      - MYSQL_ROOT_PASSWORD=${DBROOT}
      - MYSQL_DATABASE=${DBNAME}
      - MYSQL_USER=${DBUSER}
      - MYSQL_PASSWORD=${DBPASS}
      - MYSQL_INITDB_SKIP_TZINFO=1
    ports:
      - '${SQL_PORT:-127.0.0.1:13306}:3306'
    networks:
      - network
    restart: always
    healthcheck:
      test: [ "CMD", "healthcheck.sh", "--connect", "--innodb_initialized" ]
      start_period: 10s
      interval: 10s
      timeout: 5s
      retries: 3
    user: mysql
    stop_grace_period: 45s

  netfilter:
    build: backend
    volumes:
      - /lib/modules:/lib/modules:ro
    environment:
      - NETFILTER_CHAIN_NAME=${NETFILTER_CHAIN_NAME:-MAIL}
      - NETFILTER_CHAIN_COMMENT=${NETFILTER_CHAIN_COMMENT:-mail}
      - IPV4_NETWORK=${IPV4_NETWORK:-172.22.1}
      - SNAT_TO_SOURCE=${SNAT_TO_SOURCE:-}
      - SNAT6_TO_SOURCE=${SNAT6_TO_SOURCE:-}
      - REDIS_SLAVEOF_IP=${REDIS_SLAVEOF_IP:-}
      - REDIS_SLAVEOF_PORT=${REDIS_SLAVEOF_PORT:-}
      - REDISPASS=${REDISPASS}
    network_mode: "host"
    command: netfilter
    restart: always
    privileged: true
    stop_grace_period: 30s

  nginx:
    build: nginx
    depends_on:
      api:
        condition: service_healthy
      certbot:
        condition: service_healthy
      redis:
        condition: service_started
      rspamd:
        condition: service_started
      sogo:
        condition: service_started
    volumes:
      - certbot-www:/web:ro,z
      - certbot-certs:/etc/letsencrypt:ro,z
      - ./nginx/conf.d/:/etc/nginx/conf.d/:z
      - sogo-web-vol-1:/usr/lib/GNUstep/SOGo/
    environment:
      - HTTPS_PORT=${HTTPS_PORT:-443}
      - HTTP_PORT=${HTTP_PORT:-80}
      - MAIL_HOSTNAME=${MAIL_HOSTNAME}
      - ADDITIONAL_SERVER_NAMES=${ADDITIONAL_SERVER_NAMES:-}
      - TZ=${TZ}
      - SKIP_SOGO=${SKIP_SOGO:-n}
      - SKIP_RSPAMD=${SKIP_RSPAMD:-n}
      - SOGOHOST=${SOGOHOST:-}
      - RSPAMDHOST=${RSPAMDHOST:-}
      - REDISHOST=${REDISHOST:-}
      - IPV4_NETWORK=${IPV4_NETWORK:-172.22.1}
    ports:
      - '${HTTP_BIND:-}:${HTTP_PORT:-80}:${HTTP_PORT:-80}'
      - '${HTTPS_BIND:-}:${HTTPS_PORT:-443}:${HTTPS_PORT:-443}'
    networks:
      network:
        ipv4_address: ${IPV4_NETWORK:-172.22.1}.240
    restart: always
    dns:
      - ${IPV4_NETWORK:-172.22.1}.254

  postfix:
    build: postfix
    depends_on:
      api:
        condition: service_healthy
      mysql:
        condition: service_healthy
      redis:
        condition: service_started
      unbound:
        condition: service_healthy
    volumes:
      - ./postfix/conf:/opt/postfix/conf:z
      - certbot-certs:/etc/letsencrypt:ro,z
      - postfix-vol-1:/var/spool/postfix
      - rspamd-vol-1:/var/lib/rspamd
      - mysql-socket-vol-1:/run/mysqld/
    environment:
      - DBNAME=${DBNAME}
      - DBUSER=${DBUSER}
      - DBPASS=${DBPASS}
      - REDIS_SLAVEOF_IP=${REDIS_SLAVEOF_IP:-}
      - REDIS_SLAVEOF_PORT=${REDIS_SLAVEOF_PORT:-}
      - REDISPASS=${REDISPASS}
      - MAIL_HOSTNAME=${MAIL_HOSTNAME}
    ports:
      - '${SMTP_PORT:-25}:25'
      - '${SMTPS_PORT:-465}:465'
      - '${SUBMISSION_PORT:-587}:587'
    networks:
      network:
        ipv4_address: ${IPV4_NETWORK:-172.22.1}.253
    restart: always
    cap_add:
      - NET_BIND_SERVICE
    dns:
      - ${IPV4_NETWORK:-172.22.1}.254

  redis:
    image: redis:7-alpine
    volumes:
      - ./redis/docker-entrypoint.sh:/docker-entrypoint.sh:Z
      - redis-vol-1:/data/
    environment:
      - REDISPASS=${REDISPASS}
    ports:
      - '${REDIS_PORT:-127.0.0.1:7654}:6379'
    networks:
      network:
        ipv4_address: ${IPV4_NETWORK:-172.22.1}.249
    command: redis-server /redis.conf
    entrypoint: /docker-entrypoint.sh
    restart: always
    sysctls:
      - net.core.somaxconn=4096

  rspamd:
    build: rspamd
    depends_on:
      clamd:
        condition: service_started
      dovecot:
        condition: service_started
      redis:
        condition: service_started
    volumes:
      - ./rspamd/custom/:/etc/rspamd/custom:z
      - rspamd-vol-1:/var/lib/rspamd
    environment:
      - IPV4_NETWORK=${IPV4_NETWORK:-172.22.1}
      - REDIS_SLAVEOF_IP=${REDIS_SLAVEOF_IP:-}
      - REDIS_SLAVEOF_PORT=${REDIS_SLAVEOF_PORT:-}
      - REDISPASS=${REDISPASS}
    networks:
      - network
    restart: always
    dns:
      - ${IPV4_NETWORK:-172.22.1}.254
    hostname: rspamd
    stop_grace_period: 30s

  sogo:
    build: sogo
    depends_on:
      api:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - ./sogo/conf/:/etc/sogo/:z
      - ./sogo/sogo.ico:/usr/lib/GNUstep/SOGo/WebServerResources/img/sogo.ico:z
      - ./sogo/theme.js:/usr/lib/GNUstep/SOGo/WebServerResources/js/theme.js:z
      - mysql-socket-vol-1:/run/mysqld/
      - sogo-web-vol-1:/sogo_web
      - sogo-userdata-backup-vol-1:/sogo_backup
    environment:
      - DBNAME=${DBNAME}
      - DBUSER=${DBUSER}
      - DBPASS=${DBPASS}
      - MAIL_HOSTNAME=${MAIL_HOSTNAME}
      - ACL_ANYONE=${ACL_ANYONE:-disallow}
      - ALLOW_ADMIN_EMAIL_LOGIN=${ALLOW_ADMIN_EMAIL_LOGIN:-n}
      - IPV4_NETWORK=${IPV4_NETWORK:-172.22.1}
      - SOGO_EXPIRE_SESSION=${SOGO_EXPIRE_SESSION:-480}
      - MASTER=${MASTER:-y}
      - REDIS_SLAVEOF_IP=${REDIS_SLAVEOF_IP:-}
      - REDIS_SLAVEOF_PORT=${REDIS_SLAVEOF_PORT:-}
      - REDISPASS=${REDISPASS}
      - TZ=${TZ}
    networks:
      network:
        ipv4_address: ${IPV4_NETWORK:-172.22.1}.248
    restart: always
    labels:
      ofelia.enabled: "true"
      ofelia.job-exec.sogo_sessions.schedule: "@every 1m"
      ofelia.job-exec.sogo_sessions.command: "/bin/bash -c \"[[ $${MASTER} == y ]] && /usr/local/bin/gosu sogo /usr/sbin/sogo-tool -v expire-sessions $${SOGO_EXPIRE_SESSION} || exit 0\""
      ofelia.job-exec.sogo_ealarms.schedule: "@every 1m"
      ofelia.job-exec.sogo_ealarms.command: "/bin/bash -c \"[[ $${MASTER} == y ]] && /usr/local/bin/gosu sogo /usr/sbin/sogo-ealarms-notify -p /etc/sogo/cron.creds || exit 0\""
      ofelia.job-exec.sogo_eautoreply.schedule: "@every 5m"
      ofelia.job-exec.sogo_eautoreply.command: "/bin/bash -c \"[[ $${MASTER} == y ]] && /usr/local/bin/gosu sogo /usr/sbin/sogo-tool update-autoreply -p /etc/sogo/cron.creds || exit 0\""
      ofelia.job-exec.sogo_backup.schedule: "@every 24h"
      ofelia.job-exec.sogo_backup.command: "/bin/bash -c \"[[ $${MASTER} == y ]] && /usr/local/bin/gosu sogo /usr/sbin/sogo-tool backup /sogo_backup ALL || exit 0\""
    dns:
      - ${IPV4_NETWORK:-172.22.1}.254
  unbound:
    build: unbound
    volumes:
      - ./unbound/unbound.conf:/etc/unbound/unbound.conf:ro,Z
    networks:
      network:
        ipv4_address: ${IPV4_NETWORK:-172.22.1}.254
    restart: always

networks:
  network:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: br-taramail
    ipam:
      driver: default
      config:
        - subnet: ${IPV4_NETWORK:-172.22.1}.0/24

volumes:
  certbot-certs:
  certbot-www:
  clamd-vol-1:
  crypt-vol-1:
  mysql-vol-1:
  mysql-socket-vol-1:
  postfix-vol-1:
  redis-vol-1:
  rspamd-vol-1:
  sogo-web-vol-1:
  sogo-userdata-backup-vol-1:
  vmail-vol-1:
  vmail-index-vol-1:
